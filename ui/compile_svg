#!/bin/bash

svgPath="./assets/svg"
vecPath="./assets/vec"

# Return found svg files in ./assets/svg
function find_svg_files() {
    local svg_files=$(find $svgPath -name "*.svg" -type f)

    echo $svg_files
}

# Return last component of a path without the extension
function to_vector_path() {

    local path=$1
    local base=$(basename "$path" .svg)

    # Transform the path to a vector path like:
    # ./assets/svg/placeholders/image.svg -> ./assets/vec/placeholders/image.vec
    local dir=$(dirname "$path" | sed "s|$svgPath|$vecPath|")
    local vector_path="$dir/$base.vec"

    echo $vector_path
}

function main() {
    local svg_files=$(find_svg_files)

    # Compile svg files for each file
    for svg_file in $svg_files; do
        local output=$(to_vector_path $svg_file)

        # Create the output directory if it doesn't exist
        mkdir -p $(dirname $output)

        echo "Compiling $svg_file to $output"
        dart run vector_graphics_compiler --input $svg_file --output $output
    done

    dart run build_runner build --delete-conflicting-outputs
}

main
